ARG PHP_VERSION=8.4
ARG FRANKENPHP_VERSION=1.9

FROM dunglas/frankenphp:${FRANKENPHP_VERSION}-php${PHP_VERSION}

LABEL maintainer="Lido Nation <hello@lidonation.com>"
LABEL org.opencontainers.image.title="Catalyst Explorer Dockerfile"
LABEL org.opencontainers.image.description="Laravel octane frankenphp Dockerfile for catalystexplorer.com"
LABEL org.opencontainers.image.source=https://github.com/exaco/laravel-octane-dockerfile
LABEL org.opencontainers.image.licenses=MIT

ARG WWWUSER=1000
ARG WWWGROUP=1000
ARG TZ=UTC
ARG APP_DIR=/var/www
ARG APP_ENV
ARG APP_DOMAIN
ARG NODE_VERSION=22

ENV DEBIAN_FRONTEND=noninteractive \
    TERM=xterm-color \
    OCTANE_SERVER=frankenphp \
    TZ=${TZ} \
    NODE_VERSION=${NODE_VERSION} \
    USER=octane \
    ROOT=${APP_DIR} \
    APP_ENV=${APP_ENV} \
    XDG_CONFIG_HOME=${APP_DIR}/.config \
    XDG_DATA_HOME=${APP_DIR}/.data \
    SERVER_NAME=${APP_DOMAIN}

WORKDIR ${ROOT}

SHELL ["/bin/bash", "-eou", "pipefail", "-c"]

RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime \
    && echo ${TZ} > /etc/timezone

# Install curl and gpg first for repository setup
RUN apt-get update \
    && apt-get install -y --no-install-recommends curl gnupg lsb-release

# Add the PostgreSQL APT repository and key
RUN echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" \
    > /etc/apt/sources.list.d/pgdg.list \
    && curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc \
    | gpg --dearmor \
    | tee /etc/apt/trusted.gpg.d/postgresql.gpg > /dev/null

RUN apt-get update; \
    apt-get upgrade -yqq; \
    apt-get install -yqq --no-install-recommends --show-progress \
    apt-utils \
    ca-certificates \
    chromium \
    curl \
    ffmpeg \
    gifsicle \
    git \
    jpegoptim \
    libpng-dev \
    libavif-bin \
    libsodium-dev \
    libbrotli-dev \
    imagemagick \
    libmagickwand-dev \
    ncdu \
    nodejs \
    optipng \
    pngquant \
    procps \
    python3 \
    python3-venv \
    python3-launchpadlib \
    supervisor \
    vim \
    wget \
    # Install PHP extensions (included with dunglas/frankenphp)
    && install-php-extensions \
    bz2 \
    pcntl \
    mbstring \
    bcmath \
    sockets \
    pgsql \
    pdo_pgsql \
    opcache \
    exif \
    pdo_mysql \
    imagick/imagick@master \
    zip \
    uv \
    intl \
    gd \
    redis \
    rdkafka \
    igbinary \
    ldap \
    && curl -sLS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer \
    && curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - \
    && apt-get update \
    && apt-get install -y nodejs \
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /etc/apt/keyrings/yarn.gpg >/dev/null \
    && apt-get update \
    && npm install -g svgo yarn \
    && apt-get -y autoremove \
    && apt-get clean \
    && docker-php-source delete \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* 
ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/lib/chromium/ \
    PUPPETEER_EXECUTABLE_PATH="/usr/bin/chromium-browser"

COPY ./scripts /scripts/

RUN apt-get update && apt-get install -y  python3-dev

RUN mkdir /venv && chown -R 777 /venv

RUN python3 -m venv /venv

RUN /venv/bin/pip install --no-cache-dir blend_modes==2.0.2 numpy==1.26.3 pillow==11.3.0 cbor2 pycose brotli pycardano

RUN userdel --remove --force www-data \
    && groupadd --force -g ${WWWGROUP} ${USER} \
    && useradd -ms /bin/bash --no-log-init --no-user-group -g ${WWWGROUP} -u ${WWWUSER} ${USER} \
    && groupadd --force -g 1001 sail \
    && useradd -ms /bin/bash --no-log-init --no-user-group -g sail -u 1001 sail \
    && setcap -r /usr/local/bin/frankenphp

RUN chown -R ${USER}:${USER} ${ROOT} /var/{log,run,www} \
    && chmod -R a+rw ${ROOT} /var/{log,run}

RUN chmod +x /scripts/*

USER ${USER}

ENV WITH_HORIZON=false \
    WITH_SCHEDULER=false \
    WITH_REVERB=false

RUN mkdir -p \
    storage/framework/{sessions,views,cache,testing} \
    storage/logs \
    bootstrap/cache && chmod -R a+rw storage

COPY --link --chown=${WWWUSER}:${WWWUSER} healthcheck /usr/local/bin/healthcheck
COPY --link --chown=${WWWUSER}:${WWWUSER} Caddyfile /etc/caddy/Caddyfile
COPY --link --chown=${WWWUSER}:${WWWUSER} start-container /usr/local/bin/start-container
COPY --link --chown=${WWWUSER}:${WWWUSER} supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY --link --chown=${WWWUSER}:${WWWUSER} php.ini ${PHP_INI_DIR}/conf.d/99-octane.ini

RUN chmod +x /usr/local/bin/start-container /usr/local/bin/healthcheck

EXPOSE 8000
EXPOSE 443
EXPOSE 443/udp
EXPOSE 2019
EXPOSE 8080

ENTRYPOINT ["start-container"]

HEALTHCHECK --start-period=5s --interval=3s --timeout=5s --retries=8 CMD healthcheck || exit 1