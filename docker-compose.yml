x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: 6

services:
  # app
  catalystexplorer.com:
    build:
      context: "./docker"
      dockerfile: Dockerfile.dev
      args:
        WWWGROUP: "${WWWGROUP:-1000}"
    deploy:
      resources:
        limits:
          memory: ${DOCKER_COMPOSE_MEMORY_LIMIT:-1024M}
          cpus: "1.0"
    image: catalystexplorer
    container_name: catalystexplorer.com
    tty: true
    restart: unless-stopped
    env_file:
      - ./application/.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${APP_PORT:-80}:8000"
      - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
    environment:
      CONTAINER_ROLE: "app"
      IGNITION_LOCAL_SITES_PATH: "${PWD}"
      LARAVEL_SAIL: 1
      NODE_OPTIONS: "${NODE_OPTIONS:---max-old-space-size=8096}"
      OCTANE_WATCH: "${OCTANE_WATCH:-true}"
      WWWGROUP: "${WWWUSER:-1000}"
      WWWUSER: "${WWWUSER:-1000}"
      XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
      XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
      XDG_CONFIG_HOME: /var/www/caddy
      XDG_DATA_HOME: /var/www/caddy
    volumes:
      - ./application:/var/www:cached
      - ./data/app/data:/data
    networks:
      - catalystexplorer-net
      - shared-network
    depends_on:
      - catalystexplorer.db
      - catalystexplorer-search
      - catalystexplorer.redis

  catalystexplorer.cardanonode:
    container_name: catalystexplorer.cardanonode
    image: ghcr.io/intersectmbo/cardano-node:10.1.4
    command:
      [
        "run",
        "--config",
        "/config/config.json",
        "--database-path",
        "/data/db",
        "--socket-path",
        "/ipc/node.socket",
        "--topology",
        "/config/topology.json",
      ]
    volumes:
      - ./cardanonode/config/network/${CARDANO_NETWORK:-preview}/cardano-node:/config
      - ./cardanonode/config/network/${CARDANO_NETWORK:-preview}/genesis:/genesis
      - node-db:/data
      - node-ipc:/ipc
    restart: on-failure
    environment:
      CARDANO_NODE_SOCKET_PATH: /ipc/node.socket
    healthcheck:
      test: ["CMD", "stat", "/ipc/node.socket"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - catalystexplorer-net
      - shared-network
  catalystexplorer.cardanodb:
    container_name: catalystexplorer.cardanodb
    image: postgres:16.3-alpine3.19
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB=${POSTGRES_DB:-carp_preview} # dynamic based on network, default to carp_preview
      - POSTGRES_USER=${PGUSER:-carp}
      - POSTGRES_PASSWORD=${PGPASSWORD:-v8hlDV0yMAHHlIurYupj}
      - PGPASSFILE=/run/secrets/.pgpass
    secrets:
      - source: pgpass
        target: .pgpass
    ports:
      - ${POSTGRES_PORT:-5434}:5434 # Expose the database on a different port
    volumes:
      - carp-db-data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - catalystexplorer-net
      - shared-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carp -d carp_preview -p 5434"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres -c port=5434 ${POSTGRES_ARGS:--c maintenance_work_mem=1GB -c max_parallel_maintenance_workers=4}

  catalystexplorer.adminer:
    image: adminer:4.8.1
    container_name: catalystexplorer.adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - catalystexplorer-net
      - shared-network

  catalystexplorer.queue:
    image: catalystexplorer
    container_name: catalystexplorer.queue
    tty: true
    depends_on:
      - catalystexplorer.db
      - catalystexplorer.redis
    env_file:
      - ./application/.env
    environment:
      APP_SETUP: "true"
      CONTAINER_ROLE: "queue"
      DB_CONNECTION: pgsql
      MEDIA_DISK: public
      MEILISEARCH_KEY: v8hlDV0yMAHHlIurYupj
      MEILISEARCH_HOST: "http://catalystexplorer-search:7700"
      PHP_OPCACHE_ENABLE: 0
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      PHP_MEMORY_LIMIT: 2048M
      POSTGRESQL_DB_SYNC_DB_HOST: postgres_dbsync
      POSTGRESQL_DB_SYNC_PASSWORD: v8hlDV0yMAHHlIurYupj
      POSTGRESQL_DB_SYNC_DB: cexplorer
      POSTGRESQL_DB_SYNC_USER: postgres
      POSTGRESQL_WEB_DB_HOST: catalystexplorer.db
      POSTGRESQL_WEB_DB: explorerweb
      POSTGRESQL_WEB_USER: catalystexplorer
      POSTGRESQL_WEB_PASSWORD: ASLJ023470AlserLFH
      TELESCOPE_USE_DARK_THEME: "true"
      XDG_CONFIG_HOME: /var/www
    build:
      context: ./docker
      args: {}
      dockerfile: ./Dockerfile.dev
    volumes:
      - type: volume
        source: node-ipc
        target: /ipc
        volume:
          nocopy: true
      - ./application:/var/www:cached
    networks:
      - catalystexplorer-net
      - shared-network

  # database
  catalystexplorer.db:
    image: postgres:17.1-bookworm
    container_name: catalystexplorer.db
    logging: *default-logging
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB=explorerweb
      - POSTGRES_PASSWORD=ASLJ023470AlserLFH
      - POSTGRES_USER=catalystexplorer
      - POSTGRES_POSTGRES_PASSWORD=alj2340aaALJAF2341408AUUZLJK
    volumes:
      - "catalystexplorer-db:/var/lib/postgresql/data"
      # - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - catalystexplorer-net
      - shared-network
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-q"
        - "-d"
        - "explorerweb"
        - "-U"
        - "catalystexplorer"
      retries: 3
      timeout: 5s

  # meilisearch
  catalystexplorer-search:
    image: getmeili/meilisearch:v1.13.3
    container_name: catalystexplorer-search
    logging: *default-logging
    ports:
      - "${FORWARD_MEILISEARCH_PORT:-7700}:7700"
    environment:
      MEILI_NO_ANALYTICS: "${MEILISEARCH_NO_ANALYTICS:-false}"
      MEILISEARCH_KEY: v8hlDV0yMAHHlIurYupj
    volumes:
      - "catalystexplorer-search:/meili_data"
    networks:
      - catalystexplorer-net
    healthcheck:
      test:
        - CMD
        - wget
        - "--no-verbose"
        - "--spider"
        - "http://127.0.0.1:7700/health"
      retries: 3
      timeout: 5s

  # redis
  catalystexplorer.redis:
    image: redis:8.0-M02-alpine3.20
    container_name: catalystexplorer.redis
    logging: *default-logging
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "catalystexplorer-redis:/data"
    networks:
      - catalystexplorer-net
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  # minio
  catalystexplorer-minio:
    image: "minio/minio:RELEASE.2025-02-18T16-25-55Z"
    container_name: catalystexplorer-minio
    ports:
      - "${FORWARD_MINIO_PORT:-9001}:9001"
      - "${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900"
    security_opt:
      - no-new-privileges:true
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minioroot
      MINIO_DEFAULT_BUCKET: catalystexplorer.com
    volumes:
      - "catalystexplorer-minio:/data/minio"
    networks:
      - catalystexplorer-net
      - shared-network
    command: 'minio server /data/minio --console-address ":${FORWARD_MINIO_CONSOLE_PORT:-8900}" --address ":${FORWARD_MINIO_PORT:-9001}"'
    restart: always
    logging: *default-logging
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      retries: 3
      timeout: 5s

  catalystexplorer.allure:
    image: frankescobar/allure-docker-service:2.27.0
    container_name: catalystexplorer.allure
    ports:
      - "5050:5050"
    environment:
      CHECK_RESULTS_EVERY_SECONDS: 5
      KEEP_HISTORY: 1
      KEEP_HISTORY_LATEST: 25
      SECURITY_ENABLED: 0
      MAKE_VIEWER_ENDPOINTS_PUBLIC: 1
    volumes:
      - "./application/allure-results:/app/allure-results"
      - "./application/allure-reports:/app/default-reports"
    networks:
      - catalystexplorer-net
    profiles:
      - testing

  createbuckets:
    image: minio/mc
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniorootp
      MINIO_DEFAULT_BUCKET: catalystexplorer.com
    depends_on:
      - catalystexplorer-minio
    networks:
      - catalystexplorer-net
      - shared-network
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://catalystexplorer-minio:9001 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting for minio...' && sleep 1; done;
      /usr/bin/mc mb minio/${MINIO_DEFAULT_BUCKET};
      /usr/bin/mc anonymous set public minio/${MINIO_DEFAULT_BUCKET};
      exit 0;
      "
networks:
  catalystexplorer-net:
    driver: bridge
  shared-network:
    name: shared-network
    driver: bridge

volumes:
  catalystexplorer-minio:
    driver: local
  catalystexplorer-db:
    driver: local
  catalystexplorer-search:
    driver: local
  catalystexplorer-redis:
    driver: local
  test_catalystexplorer-db:
    driver: local
  node-ipc:
  node-db:
  db-data:
  carp-db-data:
secrets:
  pgpass:
    file: ./config/carp/secrets/.pgpass
