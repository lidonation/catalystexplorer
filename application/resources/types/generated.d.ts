declare namespace App.DataTransferObjects {
export type AnnouncementData = {
hash: string;
title: string;
content: string;
label?: string;
context?: string;
event_starts_at?: string;
event_ends_at?: string;
cta?: object;
user_id: number;
hero_image_url: string;
};
export type BookmarkCollectionData = {
hash: string | null;
user_id?: number;
parent_id?: number;
title?: string;
content?: string;
color?: string;
allow_comments?: string;
visibility?: string;
status?: string;
type?: string;
type_id?: number;
items_count?: number;
type_type?: string;
created_at?: string;
updated_at?: string;
deleted_at?: string;
types_count?: { [key: string]: any };
proposals_count?: number;
groups_count?: number;
communities_count?: number;
reviews_count?: number;
};
export type BookmarkItemData = {
hash: string | null;
user_id?: number;
bookmark_collection_id?: number;
model_id?: number;
model_type?: string;
title?: string;
content?: string;
action?: number;
created_at?: string;
updated_at?: string;
deleted_at?: string;
};
export type CampaignData = {
hash: string | null;
fund_id?: number;
title: string | null;
meta_title: string | null;
slug: string | null;
excerpt?: string;
comment_prompt?: string;
content?: string;
hero_img_url?: string;
amount: number | null;
created_at: string | null;
updated_at: string | null;
label?: string;
currency: string | null;
proposals_count: number | null;
unfunded_proposals_count: number | null;
funded_proposals_count: number | null;
completed_proposals_count: number | null;
total_requested: number | null;
total_awarded: number | null;
total_distributed: number | null;
fund: App.DataTransferObjects.FundData | null;
};
export type CardanoBudgetProposalData = {
govtool_user_id: number;
govtool_proposal_id: number;
proposal_name: string | null;
govtool_username: string | null;
ada_amount: number | null;
budget_cat?: string;
committee_name?: string;
updated_at?: string;
prop_comments_number?: number;
proposal_benefit?: string;
};
export type CatalystDrepData = {
hash: string | null;
name: string | null;
bio: string | null;
motivation: string | null;
qualifications: string | null;
objective: string | null;
stake_address: string | null;
voting_power: number | null;
last_active: string | null;
status: string | null;
};
export type CommunityData = {
hash: string | null;
title?: string;
content?: string;
user_id?: number;
status?: string;
slug?: string;
ideascale_profiles: any | null;
proposals_count?: number;
completed_proposals_count?: number;
funded_proposals_count?: number;
unfunded_proposals_count?: number;
amount_awarded_ada?: number;
amount_awarded_usd?: number;
amount_distributed_ada?: number;
amount_distributed_usd?: number;
ideascale_profiles_count: number;
created_at?: string;
updated_at?: string;
deleted_at?: string;
};
export type ConnectionData = {
nodes: Array<App.DataTransferObjects.ConnectionNodeData>;
links: Array<App.DataTransferObjects.ConnectionLinkData>;
rootNodeId: string;
rootNodeHash: string;
rootNodeType: string;
};
export type ConnectionLinkData = {
source: string;
target: string;
};
export type ConnectionNodeData = {
id: string;
type: string;
name: string;
hash?: string;
photo?: string;
val?: number;
x?: number;
y?: number;
};
export type FundData = {
amount: number | null;
label: string | null;
title: string | null;
hash: string | null;
proposals_count?: number;
funded_proposals_count?: number;
completed_proposals_count?: number;
amount_requested?: number;
amount_awarded?: number;
meta_title?: string;
slug?: string;
user_id?: number;
excerpt?: string;
comment_prompt?: string;
content?: string;
hero_img_url?: string;
banner_img_url?: string;
status?: string;
launched_at?: string;
awarded_at?: string;
color?: string;
currency?: string;
review_started_at?: string;
parent_id?: number;
};
export type GroupData = {
hash: string | null;
user_id?: number;
name?: string;
hero_img_url?: string;
bio?: Array<any> | string | null;
banner_img_url?: string;
slug?: string;
status?: string;
meta_title?: string;
website?: string;
twitter?: string;
discord?: string;
github?: string;
linkedin?: string;
created_at?: string;
updated_at?: string;
deleted_at?: string;
amount_awarded_ada?: number;
amount_awarded_usd?: number;
amount_requested_ada?: number;
amount_requested_usd?: number;
amount_distributed_ada?: number;
amount_distributed_usd?: number;
proposals_count?: number;
completed_proposals_count?: number;
funded_proposals_count?: number;
unfunded_proposals_count?: number;
proposals_funded?: number;
proposals_unfunded?: number;
proposals_completed?: number;
ideascale_profiles?: any;
reviews_count?: number;
};
export type IdeascaleProfileData = {
hash: string | null;
ideascaleId?: number;
username?: string;
email?: string;
name?: string;
bio?: string;
createdAt?: string;
updatedAt?: string;
twitter?: string;
linkedin?: string;
discord?: string;
ideascale?: string;
telegram?: string;
title?: string;
hero_img_url?: string;
amount_awarded_usd?: number;
amount_awarded_ada?: number;
amount_requested_ada?: number;
amount_requested_usd?: number;
amount_distributed_ada?: number;
amount_distributed_usd?: number;
co_proposals_count?: number;
own_proposals_count?: number;
claimed_by_id?: number;
completed_proposals_count?: number;
funded_proposals_count?: number;
unfunded_proposals_count?: number;
proposals_count?: number;
reviews_count?: number;
collaborating_proposals_count?: number;
groups?: any;
claimed_by: App.DataTransferObjects.UserData | null;
reviews: any | null;
};
export type LocationData = {
hash: string | null;
country: string;
city: string;
region?: string;
street?: string;
address_1?: string;
address_2?: string;
lat?: number;
long?: number;
};
export type MetricData = {
hash: string | null;
user_id: number | null;
title: string;
content?: string;
status?: string;
created_at?: string;
updated_at?: string;
color?: string;
field?: string;
type: string;
query: string;
count_by?: string;
chartData?: Array<any>;
value?: number;
order?: number;
};
export type MilestoneData = {
hash: string;
title: string;
current: boolean;
outputs: string;
success_criteria: string;
evidence: string;
month: number;
cost: number;
completion_percent: number;
milestone: number;
created_at: string;
som_reviews: any | null;
poas: any | null;
};
export type MilestonePoasData = {
hash: string;
content: string;
created_at: string;
current: boolean;
reviews: any | null;
signoffs: any | null;
};
export type MilestonePoasReviewData = {
hash: string;
content_approved: boolean;
content_comment: string;
role: string;
created_at: string;
user_id: string;
current: boolean;
};
export type MilestonePoasSignoffData = {
hash: string;
created_at: string;
user_id: string;
};
export type MilestoneSomReviewsData = {
hash: string;
outputs_approves: boolean;
outputs_comment: string | null;
success_criteria_approves: boolean;
success_criteria_comment: string | null;
evidence_approves: boolean;
evidence_comment: string | null;
current: boolean;
role: string;
user_id: string;
created_at: string;
};
export type NMKRNftData = {
id: number;
ipfshash: string;
state: string;
name: string;
displayname: string;
detaildata: string;
minted: boolean;
receiveraddress: string;
selldate: string | null;
soldby: string;
reserveduntil: string | null;
policyid: string;
assetid: string;
assetname: string;
fingerprint: string;
initialminttxhash: string;
title: string;
series: string;
ipfsGatewayAddress: string;
metadata: string;
singlePrice: number;
uid: string;
paymentGatewayLinkForSpecificSale: string;
sendBackCentralPaymentInLovelace: number;
sendBackCentralPaymentInLamport: number;
priceInLovelaceCentralPayments: number;
uploadSource: string;
priceInLamportCentralPayments: number;
singlePriceSolana: number;
};
export type NftData = {
id: number;
user_id: number;
artist_id: number;
model_id: number;
profile_hash: string;
model_type: string;
storage_link: string;
preview_link: string;
name: string;
owner_address: string;
description: string;
rarity: string;
status: string;
fingerprint: string;
metadata: App.DataTransferObjects.NftMetaData | null;
required_nft_metadata: App.DataTransferObjects.NMKRNftData | null;
minted_at: string | null;
qty: number;
created_at: string | null;
updated_at: string | null;
deleted_at: string | null;
metas: Array<any>;
};
export type NftMetaData = {
campaign_name: string | null;
yes_votes: string | null;
no_votes: string | null;
role: string | null;
project_title: string | null;
};
export type PostData = {
id: number | null;
title: string | null;
subtitle: string | null;
summary: string | null;
hero: any;
author_gravatar: string | null;
author_name: string | null;
link: string;
read_time: string | null;
type: string | null;
published_at?: string;
};
export type ProjectScheduleData = {
hash: string;
title: string;
url: string;
proposal_id: number | null;
fund_id: number | null;
project_id: number | null;
created_at: string | null;
budget: number;
milestone_count: number;
funds_distributed: number;
starting_date: string;
currency: string;
status: string;
on_track: boolean;
proposal: App.DataTransferObjects.ProposalData | null;
milestones: any | null;
};
export type ProposalData = {
hash: string | null;
campaign: App.DataTransferObjects.CampaignData | null;
title: string | null;
slug: string | null;
website?: string;
excerpt?: string;
content?: Array<any> | string | null;
amount_requested?: number;
amount_received?: number;
definition_of_success?: string;
status: string | null;
funding_status?: string;
funded_at?: string;
deleted_at?: string;
funding_updated_at?: string;
yes_votes_count?: number;
no_votes_count?: number;
abstain_votes_count?: number;
comment_prompt?: string;
social_excerpt?: string;
ideascale_link?: string;
projectcatalyst_io_link?: string;
type?: string;
meta_title?: string;
problem?: string;
solution?: string;
experience?: string;
currency?: string;
ranking_total?: number;
quickpitch?: string;
quickpitch_length?: number;
users: any | null;
fund: App.DataTransferObjects.FundData | null;
opensource: boolean | null;
completed_project_nft?: any;
link?: string;
};
export type RankingData = {
hash?: string;
user_id?: number;
model_id: number;
model_type: string;
value: number;
};
export type RatingData = {
rating: number;
review_id: number;
model_id: number;
};
export type ReviewData = {
hash: string | null;
parent_id?: number;
title?: string;
content: string | null;
status: string | null;
rating: App.DataTransferObjects.RatingData | number | null;
proposal: App.DataTransferObjects.ProposalData | null;
reviewer: App.DataTransferObjects.ReviewerData | null;
ranking_total: number | null;
positive_rankings: number | null;
negative_rankings: number | null;
};
export type ReviewModerationData = {
hash: string | null;
reviewer_id?: number;
reviewer_reputation_score?: number;
excellent_count: number;
good_count: number;
filtered_out_count: number;
flagged: boolean;
qa_rationale?: Array<any>;
};
export type ReviewerData = {
hash: string | null;
reviews_count: any;
reputation_scores?: any;
catalyst_reviewer_id: string | null;
avg_reputation_score: number | null;
claimed_by?: App.DataTransferObjects.UserData;
};
export type ReviewerReputationScoreData = {
id: number | null;
reviewer_id: number;
score: number;
context_type?: string;
context_id?: number;
fund_name?: string;
};
export type SnapshotData = {
hash: string | null;
epoch?: number;
order?: number;
fund?: App.DataTransferObjects.FundData;
};
export type TransactionData = {
hash: string | null;
tx_hash: string;
block: string;
witness: string | null;
type: string | null;
epoch: number | null;
stake_pub: string | null;
json_metadata: any;
raw_metadata: object | Array<any> | null;
created_at: string;
inputs: Array<App.DataTransferObjects.TransactionInputData>;
outputs: Array<App.DataTransferObjects.TransactionOutputData>;
};
export type TransactionInputData = {
address: string;
amount: Array<any>;
tx_hash: string;
output_index: number;
data_hash: string | null;
inline_datum: object | null;
reference_script_hash: string | null;
collateral: boolean;
reference: boolean;
};
export type TransactionOutputData = {
address: string;
amount: Array<any>;
output_index: number;
data_hash: string | null;
inline_datum: object | null;
collateral: boolean;
reference_script_hash: string | null;
consumed_by_tx: string | null;
};
export type UserData = {
hash: string | null;
name: string;
email: string;
hero_img_url: string | null;
email_verified_at: string | null;
locations: any | null;
};
export type UserSettingData = {
language: string;
theme: string;
viewChartBy: string;
};
export type VoterHistoryData = {
hash: string | null;
stake_address?: string;
fragment_id?: string;
caster?: string;
time?: string;
raw_fragment?: string;
proposal?: number;
choice?: number;
snapshot_id?: number;
created_at?: string;
updated_at?: string;
deleted_at?: string;
voting_power?: number;
snapshot?: App.DataTransferObjects.SnapshotData;
fund?: App.DataTransferObjects.FundData | string | null;
};
}
